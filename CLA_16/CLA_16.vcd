$date
	Sun Oct 29 09:55:37 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_CLA_16 $end
$var reg 1 ! Cin $end
$var reg 16 " X [15:0] $end
$var reg 16 # Y [15:0] $end
$var integer 32 $ j [31:0] $end
$scope module data $end
$var wire 1 ! Cin $end
$var wire 16 % X [15:0] $end
$var wire 16 & Y [15:0] $end
$var wire 16 ' S [15:0] $end
$var wire 1 ( Cout2 $end
$var wire 1 ) Cout1 $end
$var wire 1 * Cout0 $end
$var wire 1 + Cout $end
$scope module add0 $end
$var wire 1 ! Cin $end
$var wire 1 * Cout $end
$var wire 1 , Cout0 $end
$var wire 1 - Cout1 $end
$var wire 1 . Cout2 $end
$var wire 4 / G [3:0] $end
$var wire 4 0 Gn [3:0] $end
$var wire 4 1 P [3:0] $end
$var wire 1 2 P0Cin0 $end
$var wire 1 3 P0Gn0 $end
$var wire 1 4 P1G0 $end
$var wire 1 5 P1Gn1 $end
$var wire 1 6 P1P0Cin0 $end
$var wire 1 7 P2G1 $end
$var wire 1 8 P2Gn2 $end
$var wire 1 9 P2P1G0 $end
$var wire 1 : P2P1P0Cin0 $end
$var wire 1 ; P3G2 $end
$var wire 1 < P3Gn3 $end
$var wire 1 = P3P2G1 $end
$var wire 1 > P3P2P1G0 $end
$var wire 1 ? P3P2P1P0Cin0 $end
$var wire 4 @ X [3:0] $end
$var wire 4 A Y [3:0] $end
$var wire 4 B S [3:0] $end
$upscope $end
$scope module add1 $end
$var wire 1 * Cin $end
$var wire 1 ) Cout $end
$var wire 1 C Cout0 $end
$var wire 1 D Cout1 $end
$var wire 1 E Cout2 $end
$var wire 4 F G [3:0] $end
$var wire 4 G Gn [3:0] $end
$var wire 4 H P [3:0] $end
$var wire 1 I P0Cin0 $end
$var wire 1 J P0Gn0 $end
$var wire 1 K P1G0 $end
$var wire 1 L P1Gn1 $end
$var wire 1 M P1P0Cin0 $end
$var wire 1 N P2G1 $end
$var wire 1 O P2Gn2 $end
$var wire 1 P P2P1G0 $end
$var wire 1 Q P2P1P0Cin0 $end
$var wire 1 R P3G2 $end
$var wire 1 S P3Gn3 $end
$var wire 1 T P3P2G1 $end
$var wire 1 U P3P2P1G0 $end
$var wire 1 V P3P2P1P0Cin0 $end
$var wire 4 W X [3:0] $end
$var wire 4 X Y [3:0] $end
$var wire 4 Y S [3:0] $end
$upscope $end
$scope module add2 $end
$var wire 1 ) Cin $end
$var wire 1 ( Cout $end
$var wire 1 Z Cout0 $end
$var wire 1 [ Cout1 $end
$var wire 1 \ Cout2 $end
$var wire 4 ] G [3:0] $end
$var wire 4 ^ Gn [3:0] $end
$var wire 4 _ P [3:0] $end
$var wire 1 ` P0Cin0 $end
$var wire 1 a P0Gn0 $end
$var wire 1 b P1G0 $end
$var wire 1 c P1Gn1 $end
$var wire 1 d P1P0Cin0 $end
$var wire 1 e P2G1 $end
$var wire 1 f P2Gn2 $end
$var wire 1 g P2P1G0 $end
$var wire 1 h P2P1P0Cin0 $end
$var wire 1 i P3G2 $end
$var wire 1 j P3Gn3 $end
$var wire 1 k P3P2G1 $end
$var wire 1 l P3P2P1G0 $end
$var wire 1 m P3P2P1P0Cin0 $end
$var wire 4 n X [3:0] $end
$var wire 4 o Y [3:0] $end
$var wire 4 p S [3:0] $end
$upscope $end
$scope module add3 $end
$var wire 1 ( Cin $end
$var wire 1 + Cout $end
$var wire 1 q Cout0 $end
$var wire 1 r Cout1 $end
$var wire 1 s Cout2 $end
$var wire 4 t G [3:0] $end
$var wire 4 u Gn [3:0] $end
$var wire 4 v P [3:0] $end
$var wire 1 w P0Cin0 $end
$var wire 1 x P0Gn0 $end
$var wire 1 y P1G0 $end
$var wire 1 z P1Gn1 $end
$var wire 1 { P1P0Cin0 $end
$var wire 1 | P2G1 $end
$var wire 1 } P2Gn2 $end
$var wire 1 ~ P2P1G0 $end
$var wire 1 !" P2P1P0Cin0 $end
$var wire 1 "" P3G2 $end
$var wire 1 #" P3Gn3 $end
$var wire 1 $" P3P2G1 $end
$var wire 1 %" P3P2P1G0 $end
$var wire 1 &" P3P2P1P0Cin0 $end
$var wire 4 '" X [3:0] $end
$var wire 4 (" Y [3:0] $end
$var wire 4 )" S [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1101 )"
b1101 ("
b0 '"
1&"
1%"
1$"
1#"
1""
1!"
1~
1}
1|
1{
0z
1y
1x
1w
b1101 v
b1111 u
b0 t
0s
0r
0q
b1101 p
b1101 o
b0 n
1m
1l
1k
1j
1i
1h
1g
1f
1e
1d
0c
1b
1a
1`
b1101 _
b1111 ^
b0 ]
0\
0[
0Z
b1101 Y
b1101 X
b0 W
1V
1U
1T
1S
1R
1Q
1P
1O
1N
1M
0L
1K
1J
1I
b1101 H
b1111 G
b0 F
0E
0D
0C
b1101 B
b1101 A
b0 @
1?
1>
1=
1<
1;
1:
19
18
17
16
05
14
13
12
b1101 1
b1111 0
b0 /
0.
0-
0,
0+
0*
0)
0(
b1101110111011101 '
b1101110111011101 &
b0 %
b0 $
b1101110111011101 #
b0 "
0!
$end
#100
b1100 A
b1 @
b1101110111011100 #
b1101110111011100 &
b1 "
b1 %
b1 $
#200
1-
08
b1101 0
b1011 1
b10 /
b1011 A
b10 @
b1101110111011011 #
b1101110111011011 &
b10 "
b10 %
b10 $
#300
b1010 A
b11 @
b1101110111011010 #
b1101110111011010 &
b11 "
b11 %
b11 $
#400
0-
18
b1111 0
b1101 1
b0 /
b1001 A
b100 @
b1101110111011001 #
b1101110111011001 &
b100 "
b100 %
b100 $
#500
b1000 A
b101 @
b1101110111011000 #
b1101110111011000 &
b101 "
b101 %
b101 $
#600
1-
08
1.
0<
07
b1001 0
b111 1
b110 /
b111 A
b110 @
b1101110111010111 #
b1101110111010111 &
b110 "
b110 %
b110 $
#700
b110 A
b111 @
b1101110111010110 #
b1101110111010110 &
b111 "
b111 %
b111 $
#800
0-
18
0.
1<
17
b1111 0
b1101 1
b0 /
b101 A
b1000 @
b1101110111010101 #
b1101110111010101 &
b1000 "
b1000 %
b1000 $
#900
b100 A
b1001 @
b1101110111010100 #
b1101110111010100 &
b1001 "
b1001 %
b1001 $
#1000
1-
08
b1101 0
b1011 1
b10 /
b11 A
b1010 @
b1101110111010011 #
b1101110111010011 &
b1010 "
b1010 %
b1010 $
#1100
b10 A
b1011 @
b1101110111010010 #
b1101110111010010 &
b1011 "
b1011 %
b1011 $
#1200
0-
18
b1111 0
b1101 1
b0 /
b1 A
b1100 @
b1101110111010001 #
b1101110111010001 &
b1100 "
b1100 %
b1100 $
#1300
b0 A
b1101 @
b1101110111010000 #
b1101110111010000 &
b1101 "
b1101 %
b1101 $
#1400
1*
b1101110111011101 '
b1101 Y
1-
08
0<
1.
0J
07
0=
0;
b1 0
b1100 H
b1111 1
b1110 /
b1111 A
b1100 X
b1110 @
b1101110111001111 #
b1101110111001111 &
b1110 "
b1110 %
b1110 $
#1500
b1111 $
#10000
