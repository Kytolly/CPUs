$date
	Sun Oct 29 09:53:42 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_CAL_4 $end
$var reg 1 ! Cin $end
$var reg 4 " X [3:0] $end
$var reg 4 # Y [3:0] $end
$var integer 32 $ j [31:0] $end
$scope module data $end
$var wire 1 ! Cin $end
$var wire 1 % Cout $end
$var wire 1 & Cout0 $end
$var wire 1 ' Cout1 $end
$var wire 1 ( Cout2 $end
$var wire 4 ) G [3:0] $end
$var wire 4 * Gn [3:0] $end
$var wire 4 + P [3:0] $end
$var wire 1 , P0Cin0 $end
$var wire 1 - P0Gn0 $end
$var wire 1 . P1G0 $end
$var wire 1 / P1Gn1 $end
$var wire 1 0 P1P0Cin0 $end
$var wire 1 1 P2G1 $end
$var wire 1 2 P2Gn2 $end
$var wire 1 3 P2P1G0 $end
$var wire 1 4 P2P1P0Cin0 $end
$var wire 1 5 P3G2 $end
$var wire 1 6 P3Gn3 $end
$var wire 1 7 P3P2G1 $end
$var wire 1 8 P3P2P1G0 $end
$var wire 1 9 P3P2P1P0Cin0 $end
$var wire 4 : X [3:0] $end
$var wire 4 ; Y [3:0] $end
$var wire 4 < S [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111 <
b1111 ;
b0 :
19
18
17
16
15
14
13
12
11
10
1/
1.
1-
1,
b1111 +
b1111 *
b0 )
0(
0'
0&
0%
b0 $
b1111 #
b0 "
0!
$end
#100
b1110 <
0-
1&
0/
b1110 *
b1101 +
b1 )
b1101 #
b1101 ;
b1 "
b1 :
b1 $
#200
b1101 <
1-
0&
1'
02
b1101 *
b1011 +
b10 )
b1011 #
b1011 ;
b10 "
b10 :
b10 $
#300
b1100 <
0-
1&
1/
0.
b1110 *
b1 )
b1001 #
b1001 ;
b11 "
b11 :
b11 $
#400
b1011 <
1-
0&
1(
0'
06
1.
b1011 *
b111 +
b100 )
b111 #
b111 ;
b100 "
b100 :
b100 $
#500
b1010 <
0-
1&
0/
b1010 *
b101 +
b101 )
b101 #
b101 ;
b101 "
b101 :
b101 $
#600
b1001 <
1-
0&
1'
12
01
b1101 *
b111 +
b10 )
b11 #
b11 ;
b110 "
b110 :
b110 $
#700
b1000 <
0-
1&
1/
0.
03
11
b1110 *
b1 )
b1 #
b1 ;
b111 "
b111 :
b111 $
#800
1%
b111 <
1-
0&
0'
0(
1.
13
b111 *
b1111 +
b1000 )
b1111 #
b1111 ;
b1000 "
b1000 :
b1000 $
#900
b110 <
0-
1&
0/
b110 *
b1101 +
b1001 )
b1101 #
b1101 ;
b1001 "
b1001 :
b1001 $
#1000
b101 <
1-
0&
1'
02
b101 *
b1011 +
b1010 )
b1011 #
b1011 ;
b1010 "
b1010 :
b1010 $
#1100
b100 <
0-
1&
1/
0.
b110 *
b1001 )
b1001 #
b1001 ;
b1011 "
b1011 :
b1011 $
#1200
b11 <
1-
0&
1(
16
0'
1.
05
b1011 *
b1111 +
b100 )
b111 #
b111 ;
b1100 "
b1100 :
b1100 $
#1300
b10 <
0-
1&
0/
b1010 *
b1101 +
b101 )
b101 #
b101 ;
b1101 "
b1101 :
b1101 $
#1400
b1 <
1-
0&
1'
12
01
07
15
b1101 *
b1111 +
b10 )
b11 #
b11 ;
b1110 "
b1110 :
b1110 $
#1500
b1111 $
#10000
